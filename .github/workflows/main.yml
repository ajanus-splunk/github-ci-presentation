name: main
on:
  push:
    branches:
      - "**"
  workflow_dispatch:

permissions:
  pull-requests: read
  issues: write
  contents: write


jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - uses: pre-commit/action@v3.0.0

  tests:
    runs-on: ubuntu-latest
    needs: pre-commit
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]
        tests: ["large", "small"]
        exclude:
          - python-version: "3.11"
            tests: large
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install jobsim
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install

      - name: run small-tests
        run: poetry run pytest --junitxml="report_${{ matrix.tests }}_${{ matrix.python-version }}.xml" -s -v tests/${{ matrix.tests }}
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        with:
          name: report_${{ matrix.tests }}_${{ matrix.python-version }}
          path: report_${{ matrix.tests }}_${{ matrix.python-version }}.xml

  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Semantic release
        id: semantic
        uses: splunk/semantic-release-action@v1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          git_committer_name: gvanrossum
          git_committer_email: guido@python.org
          extra_plugins: |
            @google/semantic-release-replace-plugin

  call-workflow:
    uses: ajanus-splunk/gh-monitor-workflow/.github/workflows/monitor.yml:main
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  report_workflow:
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: uoboda-splunk/workflow-info-splunk-upload-action@v1.0
        with:
          splunk_host: ${{ secrets.SPLUNK_HOST }}
          splunk_token: ${{ secrets.SPLUNK_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ github.token }}


